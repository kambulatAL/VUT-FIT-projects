<!--
***************************************************************
*                         IFJ22                               *
***************************************************************
* @file grammar_topdown.xml
* @author Kambulat Alakaev (xalaka00@stud.fit.vutbr.cz)
* @author Andrei Kulinkovich (xkulin01@stud.fit.vutbr.cz)
-->

<!-- 
Non-terminals are in the angle brackets: <> 
terminals: id, func_name
[eps]: epsilon
-->


1: <prog> 				-> <prolog> <body> <ending>
2: <prolog>				-> <?php declare(strict_types=1) ;

3: <body> 	-> <code_block> <body>
4: <body> 	-> [eps]

5: <ending> 			-> [eps]
6: <ending> 			-> ?>


7: <code_block>            -> <statement> 
8: <code_block>            -> <def_function> 

9: <statement>             -> <expression> ;

 <!-- VARIABLES -->
10: <statement>			-> [id] = <expression> ; 

 <!-- FUNCTION DECLARATION -->
11:  <def_function>		-> function [func_name]( <param_dec_list_1> ) : <type> { <statements> }
12:  <param_dec_list_1> -> <type> [id] <param_dec_list_2>
13: <param_dec_list_1> 	-> [eps]
14: <param_dec_list_2> 	-> , <type> [id] <param_dec_list_2>
15: <param_dec_list_2> 	-> [eps]


<!-- STATEMENTS -->
16: <statements>            -> <statement> <statements>
17: <statements>            -> [eps]

 <!-- FUNCTION TYPES -->
18: <type> 				-> ?int
19: <type>				-> int
20: <type>				-> string
21: <type>				-> ?string
22: <type>				-> float
23: <type>				-> ?float
24: <type>				-> void



 <!-- FUNCTION RETURN -->
25: <statement> 		-> return <opt_expr> ;
26:	<opt_expr> 			-> <expression>
27:	<opt_expr> 			-> [eps]


 <!-- FUNCTION CALL -->
28: <statement> 		-> <function_call> ; 
29: <function_call>		-> [func_name] (<param_list>)
30: <param_list> 		-> <arg> <arg_list>
31: <param_list>		-> [eps]
32: <arg>				-> <expression>
33: <arg_list>			-> , <arg> <arg_list>
34: <arg_list>			-> [eps]


 <!-- IF ELSE -->
35: <statement>			-> if ( <expression> ) { <statements> } else { <statements> }

 <!-- WHILE -->	
36: <statement> 		-> while ( <expression> ) { <statements> }


